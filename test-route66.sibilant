(var {is test-runner} (require "@gowerstreet/infintestimal")
     route66 (require "./route66"))

(def identity (x) x)
(def four-oh-four () "404")
(def home () "home")

(var matcher-tests
     [["A matcher returns null (no match) if routes is empty"
       (#> (var result (route66.matches [] "/"))
           (is null result))]

      ["A matcher matches a string match"
       (#> (is ["/" home] (route66.matches [["/" home]] "/")))]

      ["A matcher doesn't match if the URL isn't found in routes"
       (#> (is null (route66.matches [["/" identity]] "/a")))]

      ["A matcher strips query params before matching"
       (#> (is home (second (route66.matches [["/a" home]] "/a?b=2"))))]]

     router-tests
     [["A dispatcher cannot be created from an empty route list"
       (#> (var dispatch (try (route66.create-dispatcher [] four-oh-four) e))
           (is 'ERR_ASSERTION dispatch.code))]

      ["A router takes a list of tuples (pattern, function) and returns a function"
       (#> (var dispatch (route66.create-dispatcher [["/" home]] four-oh-four))
           (is 'function (typeof dispatch)))]

      ["A router function matches everything against 404 for an empty route list"
       (#> (var dispatch (route66.create-dispatcher [["/" home]] four-oh-four))
           (is "404" ((dispatch "/api/v1/cats"))))]

      ["A router function matches a simple route to a given function"
       (#> (var dispatch (route66.create-dispatcher [["/" home]] four-oh-four))
           (is "home" ((dispatch "/"))))]

      ["A router doesn't match a route with a trailing /"
       (#> (var routes [["/home" home]]
                dispatch (route66.create-dispatcher routes four-oh-four))
           (is "404" ((dispatch "/home/"))))]

      ["A Router can match one amongst many"
       (#> (var cats (#> "cats")
                routes  [["/" home] ["/cats" cats]]
                dispatch (route66.create-dispatcher routes four-oh-four))
           (is "home" ((dispatch "/"))))]

      ["A Router can match a second amongst many"
       (#> (var cats (#> "cats")
                routes  [["/" home] ["/cats" cats]]
                dispatch (route66.create-dispatcher routes four-oh-four))
           (is "cats" ((dispatch "/cats"))))]

      ["A router can match wildcards in the URL"
       (#> (var cats (#> "cats")
                routes [["/" home]
                        ["/cats/(.+)" cats]]
                dispatch (route66.create-dispatcher routes identity))
           (is "cats" ((dispatch "/cats/bengal"))))]

      ["A router can match a named route parameter"
       (#> (var cats (# (params) (or (get params 'breed) "missing"))
                routes [["/" home]
                        ["/cats/:breed" cats]]
                dispatch (route66.create-dispatcher routes four-oh-four))
           (is "cats" ((dispatch "/cats/bengal"))))]
      ;; ["A router passes along named parameters in params"
      ;;  (#> (var cats (# (params)
      ;;                   (if (hash? params)
      ;;                     (or (get params 'breed) "missing")
      ;;                     "no params"))
      ;;           four-oh-four identity
      ;;           routes [["/" home]
      ;;                   ["/cats/:breed" cats]]
      ;;           dispatch (route66.create-dispatcher routes four-oh-four))
      ;;      (is "bengal" ((dispatch "/cats/bengal" "test"))))]

      ["A router closes over query params for its handler"
       (#> (var home (#> "home")
                cats (# (params) (typeof params))
                routes [["/" home]
                        ["/cats" cats]]
                dispatch (route66.create-dispatcher routes four-oh-four))
           (is "object" ((dispatch "/cats?breed=ragdoll"))))]])

(each suite [matcher-tests router-tests] (test-runner suite))
